<template>
	<view class="index-page">
		<hx-navbar :config="config" />
		<view class="index-scroll  has-tabbar">
			<view class="bk">
				<view class="tip">
					<view class="content">
						<view class="title">
							<text>{{$t("app.newAdd27")}}</text>
						</view>
						<view class="label">
							<text>{{$t("app.newAdd28")}}  <text class="num">{{userLoveTransmissionInfo.is_completed_today||0}}</text> {{$t("app.newAdd29")}} {{$t("app.newAdd30")}}</text>
						</view>
					</view>
				</view>
				<view class="btn">
					<view class="button" @click="goUrl1">
						<text>{{$t("app.newAdd26")}}</text>
					</view>
				</view>
			</view>
			<view class="product-container">
				<view class="product-list">
					<view class="product-item" @click="goUrl(item)" v-for="(item,index) in info.data" :key="index">
						<view class="product-img pic">
							<image :src="imageUrl+item.image" mode="aspectFit" class="img">
							</image>
						</view>
						<view class="product-info">
							<view class="product-title">{{item.title}}</view>
							<!-- <view class="product-tit">{{item.label}}</view> -->
							<view class="product-price-info">
								<view class="rebate">
									<text style="margin-right:27rpx;">{{item.statusText}}</text>
								</view>

							</view>
						</view>
					</view>

				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import hxNavbar from "@/components/hx-navbar.vue";
	import {
		$request,filesUrl
	} from "@/utils/request.js";
	export default {
		components: {
			hxNavbar,
		},
		computed: {
			config() {
				return {
					title: this.$t("app.newAdd14"),
					color: "#403039",
					backgroundColor: [1, ['#FCEEB7', '#FEE1AB']],
				};
			},
			imageUrl(){
				return filesUrl;
			}
		},
		data() {
			return {
				
				requestData: {
					page: 1,
					limit: 20,
				},
				info: {data:[]},
				userLoveTransmissionInfo:{}
			}
		},
		mounted() {
			this.getList();
			this.userLoveTransmission();
		},
		onReachBottom() {
			this.requestData.page++;
			this.getList();
		},
		methods:{
			goUrl1(item){
				uni.navigateTo({
					url:`/pages/index/detail/passingLoveDetailDetail?id=${item.id}`
				})
			},
			goUrl(item){
				uni.navigateTo({
					url:`/pages/index/detail/passingLoveDetail?id=${item.id}`
				})
			},
			async userLoveTransmission() {
				// userLoveTransmissionInfo
				// loveTransmissions
				let res = await $request('userLoveTransmissionInfo',{});
				
				if (res.data.code == 200) {
					this.userLoveTransmissionInfo = res.data.data;
				}
			},
			async getList() {
				// userLoveTransmissionInfo
				// loveTransmissions
				let res = await $request('loveTransmissions', this.requestData);
				
				this.loading = false;
				if (res.data.code == 200) {
					this.info.data.push(...res.data.data.data);
					this.info.total = res.data.data.total;
				}
			},
		}
	}
</script>

<style lang="less">
	@import "../../static/less/variable.less";

	page {
		background-color: #F4F4F4;
	}

	.index-page {
		// padding: 0;
		.index-scroll{
			padding-top: 0rpx;
			// padding-bottom: 75rpx;
		}
		.bk{
			// width: 813rpx;
			height: 750rpx;
			background: url("../../static/img/bg/love_bk1.png") no-repeat top left / 100% 100%;
			display: flex;
			align-items: center;
			padding-top: 75rpx;
			position: relative;
			// margin-bottom: 50rpx;
			.tip{
				width: 609rpx;
				height: 404rpx;
				background: url("../../static/img/bg/love_bk2.png") no-repeat top left / 100% 100%;
				display: flex;
				flex-direction: row;
				.content{
					width: 80%;
					height: 150rpx;
					display: flex;
					justify-content: space-around;
					display: flex;
					flex-direction: column;
					box-sizing: border-box;
					padding-top: 50rpx;
					padding-left: 47rpx;
					.title{
						color: #FFFFFF;
						font-size: 24rpx;
						font-weight: 600;
					}
					.label{
						color: #FFFFFF;
						font-size: 24rpx;
						font-weight: 600;
						.num{
							font-size: 48rpx;
						}
					}
					
				}
			}
			.btn{
				width: 100%;
				position: absolute;
				bottom: -50rpx;
				left: 0;
				display: flex;
				justify-content: center;
				align-items: center;
				z-index: 10;
				
				view{
					width: 600rpx;
					height: 110rpx;
					background: linear-gradient( 180deg, #EF8E1F 0%, #F0AC05 100%);
					border-radius: 20rpx;
					display: flex;
					justify-content: center;
					align-items: center;
					color: #FFFFFF;
					font-size: 30rpx;
					font-weight: 600;
				}
			}
		}
		.product-container,
		.product-container3 {
			padding-top: 70rpx;
			padding-bottom: 26rpx;
			box-sizing: border-box;
			padding-left: 20rpx;
			padding-right: 20rpx;
			background-color: white;
			.header {
				display: flex;
				justify-content: space-between;
				align-items: center;
			}

			.tit {
				margin-bottom: 8rpx;
				color: @bodyColor;
				font-size: @bodySize;
				font-weight: 600;
				display: flex;
				flex-direction: row;
				align-items: center;
			}

			.desc {
				margin-bottom: 28rpx;
				color: #777680;
				font-size: @descSize;
			}

			.product-list {
				// .df(stretch, flex-start);
				width: 100%;

				.product-item {
					margin-top: 10rpx;
					margin-right: 10rpx;
					border-radius: 20rpx;
					background-color: #fff;
					width: 100%;
					// overflow: hidden;
					display: flex;
					flex-direction: row;
					align-items: center;
					box-sizing: border-box;
					padding-top: 9rpx;
					padding-bottom: 9rpx;

					.product-img {
						width: 144rpx;
						height: 144rpx;
						background-color: white;
						margin-right: 27rpx;

						image {
							width: 100%;
							height: 100%;
							// height: 100rpx;
						}
					}

					.product-info {
						padding: 20rpx 28rpx;
						box-sizing: border-box;
						width: calc(100% - 144rpx);
						height: 144rpx;
						display: flex;
						flex-direction: column;
						justify-content: space-between;

						.product-title {
							.vertical(2);
							color: #3A2633;
							font-size: 24rpx;
							font-weight: 600;
							line-height: 1.5;
							margin-bottom: 9rpx;
						}

						.product-tit {
							.vertical(2);
							color: #F3581D;
							font-size: 26rpx;
							font-weight: 600;
							line-height: 1.5;
							margin-bottom: 9rpx;

						}

						.product-price-info {
							// .df(center, space-between);
							display: flex;
							flex-direction: row;
							.rebate {
								color: #9EA19D;
								font-size: 24rpx;
								display: flex;
								flex-direction: row;
								align-items: center;
								// font-weight: bold;
							}

							.brfore-rebate {
								color: #777680;
								font-size: 30rpx;
								text-decoration: line-through;
							}
						}
					}

					&:nth-child(2n) {
						margin-right: 0;
					}
				}
			}
		}
	}
</style>